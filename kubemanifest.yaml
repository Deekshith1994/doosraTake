apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifest.yaml
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: nginx
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifest.yaml
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: flask
    name: flask
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifest.yaml
          kompose.version: 1.20.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: flask
      spec:
        containers:
        - env:
          - name: APP_NAME
            value: doosraTakeApp
          image: dkallem/flask_uwsgi
          name: flask
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifest.yaml
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifest.yaml
          kompose.version: 1.20.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: nginx
      spec:
        containers:
        - image: dkallem/nginx001
          name: nginx
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

